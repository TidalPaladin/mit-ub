# This configuration should achieve ~91% accuracy on CIFAR-10
fit:
  compile: true
  float32_matmul_precision: medium
  trainer:
    accelerator: gpu
    devices: [0]
    precision: "bf16-mixed"
    max_steps: 50000
    num_sanity_val_steps: 0
    default_root_dir: /mnt/flash/mit-ub
    check_val_every_n_epoch: 5

    callbacks:
      - class_path: pytorch_lightning.callbacks.ModelCheckpoint
        init_args:
          filename: "epoch={epoch}-step={step}-loss={val/loss:.4f}"
          monitor: "val/loss"
          auto_insert_metric_name: false
          mode: min
          save_last: true

    logger:
      class_path: pytorch_lightning.loggers.wandb.WandbLogger
      init_args:
        save_dir: /mnt/flash/mitub
        project: mit-ub
        name: cifar10-convnext

  model:
    class_path: mit_ub.tasks.ClassificationTask
    init_args:
      backbone: "convnext-cifar10"
      num_classes: 10
      optimizer_init:
        class_path: torch.optim.AdamW
        init_args:
          lr: 0.001
          weight_decay: 0.01
      weight_decay_exemptions:
        - "bias"
        - "LayerNorm"
      lr_interval: "step"
      lr_scheduler_init:
        class_path: torch.optim.lr_scheduler.StepLR
        init_args:
          step_size: 20000
          gamma: 0.1

  data:
    class_path: mit_ub.data.CIFAR10DataModule
    init_args:
      root: /mnt/data/cifar10/cifar-10-batches-py
      batch_size: 512
      num_workers: 12
      pin_memory: true

      train_transforms:
        class_path: torchvision.transforms.v2.Compose
        init_args:
          transforms:
            - class_path: torchvision.transforms.v2.RandomHorizontalFlip
              init_args:
                p: 0.5

            - class_path: torchvision.transforms.v2.RandomVerticalFlip
              init_args:
                p: 0.5

            - class_path: torchvision.transforms.v2.ColorJitter
              init_args:
                brightness: 0.2
                contrast: 0.2
                saturation: 0.2

            - class_path: mit_ub.data.rotation.RandomRotation
              init_args:
                degrees: [-20, 20]
                expand: true

            - class_path: torchvision.transforms.v2.RandomResizedCrop
              init_args:
                size: [32, 32]
                scale: [0.8, 1.0]
                ratio: [0.8, 1.2]
                antialias: true

            - class_path: torchvision.transforms.v2.ToTensor

      val_transforms:
        class_path: torchvision.transforms.v2.ToTensor
