[build-system]
requires = ["pdm-pep517>=1.0"]
build-backend = "pdm.pep517.api"

[project]
name = "mit-ub"
description = ""
requires-python = ">=3.11"
authors = [
    {name = "Scott Chase Waggener", email = "tidalpaladin@protonmail.com"},
]
dependencies = [
    "numpy",
    "pydicom",
    "torch",
    "torchvision",
    "torchmetrics",
    "pytorch-lightning",
    "lightning-bolts",
    "timm>=0.5.4",
    "einops",
    "pandas",
    "Pillow",
    "deep-helpers @ git+https://github.com/TidalPaladin/deep-helpers.git",
    "registry @ git+https://github.com/TidalPaladin/callable-registry.git",
    "dicom-utils @ git+https://github.com/medcognetics/dicom-utils.git",
    "torch-dicom[datamodule] @ git+https://github.com/medcognetics/torch-dicom.git",
    "jsonargparse[signatures]",
    "triton>=2.0",
]
readme = "README.md"
license = {text = "Apache"}
dynamic = ["version"]

[project.optional-dependencies]
train = [
    "ssl-tasks @ git+https://github.com/TidalPaladin/ssl-tasks.git",
]

[tool.autoflake]
remove-all-unused-imports = true
remove-unused-variables = true

[tool.autopep8]
max_line_length = 120
ignore = "E501,W6,E203"
in-place = true
recursive = true
aggressive = 3

[tool.black]
line-length = 120

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 119
lines_after_imports = 2
multi_line_output = 3
use_parentheses = false

[tool.pdm]
version = { source = "scm" }

[tool.pdm.dev-dependencies]
test = [
  "pytest",
  "pytest-mock",
  "pytest-cov",
  "coverage",
  "pdbpp",
]
quality = [
  "autoflake",
  "autopep8",
  "black",
  "flake8",
  "isort",
]

[tool.pytest.ini_options]
markers = [
  "ci_skip",
  "slow",
]
filterwarnings = []

# Sample script config
#[project.scripts]
#foo = "project.cli.__main__:main"
